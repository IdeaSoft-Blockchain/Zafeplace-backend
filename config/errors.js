module.exports = {
    450001: `Such a user already exists!`,
    450002: `Incorrect password repeat`,
    450003: `User is not confirmed`,
    450004: `User deleted!`,
    450006: `Incorrect token! Please try again.`,
    450007: `User already confirmed account by this token`,
    450008: `Verify confirm token error`,
    450009: `Incorrect login or password`,
    450010: `Application deleted!`,
    450011: `Incorrect packageName or appSecret`,
    450012: `Application with this name already exists!`,

    400001: `JSON payload is not valid`,
    401000: `Unauthorized`,
    404000: `Not Found`,
    404001: `User Not Found`,
    403000: `Token time expired! Please login or refresh token!`,
    403002: `Refresh token is invalid, please login`,
    403003: `Network not found`,

    417000: `'firstName' param is required`,
    417001: `'lastName' param is required`,
    417002: `'email' param is required`,
    417003: `'password' param is required`,
    417004: `'passwordRepeat' param is required`,
    417005: `'token' param is required`,
    417006: `'name' param is required`,
    417007: `'description' param is required`,
    417008: `'packageName' param is required`,
    417009: `'developerETHWallet' param is required`,
    417110: `'appSecret' param is required`,
    417111: `'recipient' param is required`,
    417112: `'network' param is required`,
    417113: `'amount' param is required`,
    417114: `'signTx' param is required`,
    417115: `'sender' param is required`,
    417116: `'address' param is required`,
    417117: `'bundleId' param is required`,
    417118: `'methodName' param is required`,
    417119: `'methodParams' param is required`,

    417010: `'firstName' param must be string`,
    417011: `'lastName' param must be string`,
    417012: `incorrect 'email'`,
    417013: `'country' param must be string`,
    417014: `'company' param must be string`,
    417015: `'password' param must contain at least one capital latter, a digit and a special character in range from 8 to 30 symbols`,
    417016: `'passwordRepeat' param must contain at least one capital latter, a digit and a special character in range from 8 to 30 symbols`,
    417017: `'token' param must be string`,
    417018: `'name' param must be string`,
    417019: `'description' param must be string`,
    417020: `'firstName' param length must be in range from 2 to 100 symbols`,
    417021: `'lastName' param length must be in range from 2 to 100 symbols`,
    417022: `'email' param length must be in range from 6 to 100 symbols`,
    417023: `'country' param length must be in range from 2 to 36 symbols`,
    417024: `'company' param length must be in range from 2 to 100 symbols`,
    417025: `'methodName' param must be string`,
    417026: `'methodParams' param must be string`,

    417050: `'packageName' param must be string`,
    417051: `'developerETHWallet' param must be string`,
    417052: `'appCoverGasUsage' param must be string`,
    417053: `'webHookData' params must be string`,
    417054: `'fcmData' params must be string`,
    417055: `'bundleId' params must be string`,
    417056: `'smartContractData.address' params must be string`,
    417057: `'smartContractData.abi' params must be string`,
    417058: `'appSecret' param must be string`,
    417059: `'recipient' param must be string`,
    417060: `'network' param must be string`,
    417061: `'gasLimit' param must be number`,
    417062: `'gasPrice' param must be number`,
    417063: `'signTx' param must be string`,
    417064: `'amount' param must be float or int`,
    417065: `'recipient' param must be string`,
    417066: `'address' param must be string`,
    417067: (params) => `'${params}' param will be a int`,
    417068: (params) => `'${params}' param will be a int8`,
    417069: (params) => `'${params}' param will be a int16`,
    417070: (params) => `'${params}' param will be a int32`,
    417071: (params) => `'${params}' param will be a int64`,
    417072: (params) => `'${params}' param will be a int128`,
    417073: (params) => `'${params}' param will be a int256`,
    417074: (params) => `'${params}' param will be a uint`,
    417075: (params) => `'${params}' param will be a uint8`,
    417076: (params) => `'${params}' param will be a uint16`,
    417077: (params) => `'${params}' param will be a uint32`,
    417078: (params) => `'${params}' param will be a uint64`,
    417079: (params) => `'${params}' param will be a uint128`,
    417080: (params) => `'${params}' param will be a uint256`,
    417081: (params) => `'${params}' param will be a ethereum address`,
    417082: (params) => `'${params}' param will be a boolean`,
    417083: (params) => `'${params}' param will be a string`,
    417084: (params) => `'${params}' param will be a stellar address`,

    500001: `Transaction service not work!`,
    500002: (params) => `'${params}' params not find!`,
};
